{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message_wrapper","src","avatar","alt","message_avatar","message","message_content","message_name","name","message_text","message_time","time","messageData","HW1","Affair","itemStyle","color","affair","priority","item","style","onClick","deleteAffairCallback","_id","deleteButton","Affairs","mappedAffairs","data","map","a","wrapper","setFilter","button","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","console","log","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","setError","inputClass","right","activeButton","value","onChange","e","currentTarget","input","onKeyPress","key","disabled","error_message","GreetingContainer","users","addUserCallback","setName","length","alert","HW3","setUsers","newUser","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c42ce879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__adwxm\",\"name\":\"Affairs_name__3e5_o\",\"priority\":\"Affairs_priority__3sWkT\",\"item\":\"Affairs_item__1BYAz\",\"button\":\"Affairs_button__3YaQm\",\"deleteButton\":\"Affairs_deleteButton__2DumX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"Message_message_wrapper__iwu8a\",\"message_avatar\":\"Message_message_avatar__a2bxO\",\"message\":\"Message_message__8WR15\",\"message_content\":\"Message_message_content__b4wvd\",\"message_name\":\"Message_message_name__2kAMq\",\"message_text\":\"Message_message_text__lSwLv\",\"message_time\":\"Message_message_time__1y8lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Greeting_item__1AV2S\",\"error\":\"Greeting_error__1uvQ8\",\"error_message\":\"Greeting_error_message__2dFJG\",\"input\":\"Greeting_input__2kXLu\",\"button\":\"Greeting_button__24QRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.message_wrapper}>\n            <img src={props.avatar} alt={'avatar'} className={s.message_avatar}/>\n            <div className={s.message}>\n                <div className={s.message_content}>\n                    <div className={s.message_name}>{props.name}</div>\n                    <div className={s.message_text}>{props.message}</div>\n                </div>\n                <div className={s.message_time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\"\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id);\n    }\n\n    const itemStyle = {\n        color: (props.affair.priority === 'high') ? 'red': (props.affair.priority === 'middle') ? '#FF8C00' : '#013220'\n    }\n\n\n    return (\n        <div className={s.item}>\n            <span className={s.name}>{props.affair.name}</span><span className={s.priority} style={itemStyle}>[{props.affair.priority}]</span>\n\n            <button onClick={deleteCallback} className={s.deleteButton}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div className={s.wrapper}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={s.button}>All</button>\n            <button onClick={setHigh} className={s.button}>High</button>\n            <button onClick={setMiddle} className={s.button}>Middle</button>\n            <button onClick={setLow} className={s.button}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\n    export type FilterType = 'all' | AffairPriorityType\n\n// constants\n    const defaultAffairs: Array<AffairType> = [\n        {_id: 1, name: 'React', priority: 'high'},\n        {_id: 2, name: 'anime', priority: 'low'},\n        {_id: 3, name: 'games', priority: 'low'},\n        {_id: 4, name: 'work', priority: 'high'},\n        {_id: 5, name: 'html & css', priority: 'middle'},\n    ]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'low') {\n        return affairs.filter(t => t.priority === 'low')\n    }\n    if (filter === 'middle') {\n        return affairs.filter(t => t.priority === 'middle')\n    }\n    if (filter === 'high') {\n        return affairs.filter(t => t.priority === 'high')\n    }\n    return affairs\n\n}\n\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(t => t._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    console.log(filteredAffairs);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (name: string) => void // need to fix any\n    addUser: (name: string) => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    setError: (error: string) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, setError} // деструктуризация пропсов\n) => {\n\n\n\n    const inputClass = error ? s.right : s.error // need to fix with (?:)\n\n    const activeButton = name ? false : true\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            if (e.currentTarget.value === ' ') {\n                setError('no spaces can be entered')\n            } else {\n                setNameCallback(e.currentTarget.value)\n                setError('')\n            }\n\n\n\n\n    }\n\n    const onKeyPressHendler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name !== '') {\n            addUser(name)\n            setNameCallback('')\n        } else if (e.key === 'Enter' && name === '') {\n            setError('write a name')\n        }\n    }\n\n    const onClickAddUser = () => {\n        addUser(name)\n        setNameCallback('')\n\n    }\n\n    return (\n        <div className={s.item}>\n            <input value={name}\n                   onChange={onChangeHandler}\n                   className={`${inputClass} ${s.input}`}\n                   onKeyPress={onKeyPressHendler}/>\n            <button onClick={onClickAddUser} disabled={activeButton} className={s.button}>add</button>\n            <span>{totalUsers}</span>\n            <div className={s.error_message}>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: string) => { // need to fix any\n        setName(e) // need to fix\n    }\n    const addUser = (name: string) => {\n        addUserCallback(name)\n        alert(`Hello ${name}!`) // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            setError={setError}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        let newUser = {_id: v1(), name}\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}